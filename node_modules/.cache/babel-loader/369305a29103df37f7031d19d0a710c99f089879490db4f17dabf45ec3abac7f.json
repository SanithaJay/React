{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\ReactProjects\\\\sample\\\\src\\\\ToDoHooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoHooks() {\n  _s();\n  const [input, setInput] = useState('');\n  const [list, setList] = useState([]);\n  console.log(input);\n  function addnames() {\n    const newName = {\n      id: list.length,\n      name: input\n    };\n    console.log(newName);\n    setList([newName, ...list]); //copying using spread operator                \n  }\n  const handleClick = item => {\n    console.log(`You clicked on ${item.name}`);\n    setInput(item.name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TODO LIST Using Hooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addnames,\n      children: \"Add Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), list.length > 0 && list.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        onClick: () => handleClick(item),\n        children: [item.name, \" \"]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoHooks, \"pgEnTjzaMugrMeuosKaThfGWepE=\");\n_c = ToDoHooks;\nvar _c;\n$RefreshReg$(_c, \"ToDoHooks\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDoHooks","_s","input","setInput","list","setList","console","log","addnames","newName","id","length","name","handleClick","item","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["D:/MERN/ReactProjects/sample/src/ToDoHooks.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function ToDoHooks() {\r\n    const [input, setInput] = useState('');\r\n    const [list, setList] = useState([]);\r\n    \r\n    console.log(input);\r\n\r\n    function addnames() {\r\n        const newName = { id: list.length, name: input }\r\n        console.log(newName);\r\n        setList([newName, ...list])//copying using spread operator                \r\n    }\r\n    const handleClick = (item) => {\r\n        console.log(`You clicked on ${item.name}`);\r\n        setInput(item.name);\r\n        \r\n       \r\n    };\r\n    \r\n\r\n    return (\r\n        <section>\r\n            <h2>TODO LIST Using Hooks</h2>\r\n            <input type='text' value={input} onChange={(e) => setInput(e.target.value)} />\r\n            <button onClick={addnames}>Add Name</button>\r\n            {list.length>0 && list.map(item => {\r\n\r\n                return (\r\n\r\n\r\n                    <h2 key={item.id} onClick={() => handleClick(item)}>{item.name} </h2>\r\n\r\n                )\r\n            })\r\n\r\n            }\r\n        </section>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCS,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAElB,SAASM,QAAQA,CAAA,EAAG;IAChB,MAAMC,OAAO,GAAG;MAAEC,EAAE,EAAEN,IAAI,CAACO,MAAM;MAAEC,IAAI,EAAEV;IAAM,CAAC;IAChDI,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;IACpBJ,OAAO,CAAC,CAACI,OAAO,EAAE,GAAGL,IAAI,CAAC,CAAC;EAC/B;EACA,MAAMS,WAAW,GAAIC,IAAI,IAAK;IAC1BR,OAAO,CAACC,GAAG,CAAC,kBAAkBO,IAAI,CAACF,IAAI,EAAE,CAAC;IAC1CT,QAAQ,CAACW,IAAI,CAACF,IAAI,CAAC;EAGvB,CAAC;EAGD,oBACIb,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEnB,KAAM;MAACoB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EpB,OAAA;MAAQ0B,OAAO,EAAEjB,QAAS;MAAAO,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3Cf,IAAI,CAACO,MAAM,GAAC,CAAC,IAAIP,IAAI,CAACsB,GAAG,CAACZ,IAAI,IAAI;MAE/B,oBAGIf,OAAA;QAAkB0B,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAACC,IAAI,CAAE;QAAAC,QAAA,GAAED,IAAI,CAACF,IAAI,EAAC,GAAC;MAAA,GAAvDE,IAAI,CAACJ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoD,CAAC;IAG7E,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGG,CAAC;AAElB;AAAClB,EAAA,CArCuBD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}